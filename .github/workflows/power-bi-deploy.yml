# This is a basic workflow that is manually triggered

name: Deploy Power BI

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  get_files:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Copy Files
      shell: pwsh
      run: |
        if (Test-Path -Path build) {rm build -r}
        New-Item -ItemType "directory" "build/reports"
        New-Item -ItemType "directory" "build/scripts"
        $folderSet = @{}
        Get-ChildItem "Business Reports" -Include *.pbix,settings*.json -Force -Recurse | foreach-object { 
        	if(!$folderSet.Contains($_.Directory.Name))
        	{
        		New-Item -ItemType "directory" $("build/reports/" + $_.Directory.Name)
        		$folderSet.Add($_.Directory.Name, $true)
        	}
        	Copy-Item $_.FullName -Destination "$("build/reports/" + $_.Directory.Name + "/" + $_.Name)" 
        }
        Get-ChildItem scripts -Force -Recurse | foreach-object { Copy-Item $_.FullName -Destination "$("build/scripts/" + $_.Name)" }
    - name: Upload Files
      uses: actions/upload-artifact@v3
      with:
        path: build
        name: drop
    - name: Display Build Files
      shell: pwsh
      run: |
        Get-ChildItem build -Force -Recurse | foreach-object {write-host $_.FullName}
  Dev:
    runs-on: ubuntu-latest
    environment: Dev
    needs: get_files
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: drop
        path: published
    - name: Deploy Power BI
      shell: pwsh
      run: |
        ./published/scripts/powerbiDeploy.ps1 -ClientId ${{ secrets.ClientID }} -TenantId ${{ secrets.TenantID }} -ClientSecret ${{ secrets.ClientSecret }} -workspaceName FromGithub -reportPrefix "[DEV] " -reportsPath "${{ github.workspace }}/published/reports/" -env = "dev"
  Stage:
    runs-on: ubuntu-latest
    environment: Stage
    needs: get_files
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: drop
        path: published
    - name: Deploy Power BI
      shell: pwsh
      run: |
        ./published/scripts/powerbiDeploy.ps1 -ClientId ${{ secrets.ClientID }} -TenantId ${{ secrets.TenantID }} -ClientSecret ${{ secrets.ClientSecret }} -workspaceName FromGithub -reportPrefix "[STG] " -reportsPath "${{ github.workspace }}/published/reports" -env = "stage"
  Prod:
    runs-on: ubuntu-latest
    environment: Prod
    needs: get_files
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: drop
        path: published
    - name: Deploy Power BI
      shell: pwsh
      run: |
        ./published/scripts/powerbiDeploy.ps1 -ClientId ${{ secrets.ClientID }} -TenantId ${{ secrets.TenantID }} -ClientSecret ${{ secrets.ClientSecret }} -workspaceName FromGithub -reportsPath "${{ github.workspace }}/published/reports" -dataSetConnections -env = "prod"
